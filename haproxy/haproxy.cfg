# HAProxy configuration
#
# **** DO NOT EDIT THIS FILE ****
#
# This file is managed by Salt.
# Any changes will be overwritten.

#------------------
# Global settings
#------------------
global
    daemon
    stats socket /tmp/socket
    tune.ssl.default-dh-param 2048

defaults
    mode http
    retries 3
    default-server inter 3s fall 2 rise 2 slowstart 60s
    option	http-server-close
    timeout connect         5s
    timeout client          1m
    timeout server          1m
    timeout check           10s
    timeout http-keep-alive 10s
    timeout http-request    10s
    timeout queue           1m

listen stats
  bind :8998
  stats enable
  stats realm HAProxyStatistics1
  stats show-desc Primary load balancer
  stats uri /admin?stats
  stats refresh 20s
  stats hide-version 
  stats auth admin:admin


# Main frontend dedicated to end users,
frontend ft_web
    bind :80
    acl static_content path_end .jpg .gif .png .css .js .htm .html .woff
#    acl varnish_available nbsrv(bk_varnish_uri) ge 1
#    use_backend bk_varnish_uri if varnish_available static_content
#    use_backend bk_varnish_url_param if varnish_available image_dynamic
    default_backend bk_appsrv

# appsrv backend for dynamic content
backend bk_appsrv
    balance roundrobin
    # app servers must say if everything is fine on their side
    # and they can process requests
    option httpchk
    option httpchk GET /app-check/
    http-check expect rstring [oO][kK]
    cookie SERVERID insert indirect nocache
    # Transparent proxying using the client IP from the TCP connection
    #source 0.0.0.0 usesrc clientip
    # having troubles with that so we're using forwardfor
    option forwardfor
    #http-response set-header X-HAProxy-Debug bk_appsrv
#server app_znbweb1 172.31.55.123:81 cookie app_znbweb1 check maxconn 250
    server app_znbweb1 web1:80 cookie app_znbweb1 check maxconn 250

## static backend with balance based on the uri, including the query string
## to avoid caching an object on several caches
#backend bk_varnish_uri
#    balance uri whole # in latest HAProxy version, one can add 'whole' keyword
#    # Varnish must tell it's ready to accept traffic
#    option httpchk HEAD /varnishcheck
#    http-check expect status 200
#    # client IP information
#    option forwardfor
#    # avoid request redistribution when the number of caches changes (crash or start up)
#    hash-type consistent
#    #http-response set-header X-HAProxy-Debug bk_varnish_uri
#    server cache_znbweb1 172.31.55.123:83 check maxconn 1000
#
## cache backend with balance based on the value of the URL parameter called "id"
## to avoid caching an object on several caches
#backend bk_varnish_url_param
#    balance url_param id
#    # client IP information
#    option forwardfor
#    # avoid request redistribution when the number of caches changes (crash or start up)
#    hash-type consistent
#    #http-response set-header X-HAProxy-Debug bk_varnish_url_param
#    server cache_znbweb1 172.31.55.123:83 maxconn 1000 track bk_varnish_uri/cache_znbweb1
